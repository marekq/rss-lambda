schema {
  query: Query
}

type Query {
  QueryDdbByBlogsourceAndTimest(filter: TableddbsourceFilterInput, blogsource: String!, timest: Int!, nextToken: String): listourceConnection
  QueryDdbByVisibleAndTimest(filter: TableddbsourceFilterInput, visible: String!, timest: Int!, nextToken: String): listourceConnection
  QueryDdbGetDetailText(guid: String!): itemsourceConnection
  QueryDdbItemCountPerBlog(blogsource: String!): pagecountConnection
  QueryDdbItemCountAll(timest: Int!): pagecountConnection
}

type listsource {
  blogsource: String
  guid: String
  timest: Int
  link: String
  author: String
  title: String
}

type listourceConnection {
  items: [listsource]
  nextToken: String
}

type itemsource {
  blogsource: String
  guid: String
  timest: Int
  link: String
  author: String
  description: String
}

type itemsourceConnection {
  items: [itemsource]
}

type pagecount {
  blogsource: String
  timest: Int 
  visible: String
  articlecount: Int
}

type pagecountConnection {
  items: [pagecount]
}

input TableddbsourceFilterInput {
  blogsource: TableStringFilterInput
  guid: TableStringFilterInput
  timest: TableIntFilterInput
  visible: TableStringFilterInput
}

input TableStringFilterInput {
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
}

input TableIntFilterInput {
	between: [Int]
	contains: Int
	eq: Int
	ge: Int
	gt: Int
	le: Int
	lt: Int
	ne: Int
	notContains: Int
}