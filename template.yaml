AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Specification template describing your function.

Parameters:
  SourceEmail:
    Type: String
    Description: The sending email address for notification emails
    Default: aws@marek.rocks

  DestEmail:
    Type: String
    Description: The receiving email address for notification emails
    Default: marek.kuczynski@gmail.com

  SendEmails: 
    Description: Set whether to send SES emails or not (default disabled). 
    Default: 'n'
    Type: String
    AllowedValues: 
      - 'y'
      - 'n'

  StorePublicS3:
    Description: Store a JSON object of blogposts as a public S3 file (default disabled).
    Default: 'n'
    Type: String
    AllowedValues:
      - 'y'
      - 'n'
  
  DaysToRetrieve:
    Description: Configure how far to look back in time while retrieving blogposts, default 3 days
    Default: 1
    Type: Number

Resources:

  rssdynamo:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: dynamo.handler
      Runtime: python3.8
      CodeUri: lambda-dynamo/
      Description: 'Retrieve RSS feeds and store them in DynamoDB'
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendEmail'
              Resource: '*'
        - ComprehendFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy
        - DynamoDBCrudPolicy:
            TableName: !Ref rssfeed
        - S3WritePolicy:
            BucketName: !Ref PublicJsonBucket
      MemorySize: 1024
      Timeout: 30
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(5 minutes)
      Environment:
        Variables:
          dynamo_region: !Ref 'AWS::Region'
          dynamo_table: !Ref rssfeed
          fromemail: !Ref SourceEmail
          toemail: !Ref DestEmail
          sendemails: !Ref SendEmails
          daystoretrieve: !Ref DaysToRetrieve
          s3bucket: !Ref PublicJsonBucket
          storepublics3: !Ref StorePublicS3
      Tracing: Active
      ReservedConcurrentExecutions: 1
      Layers: 
        - !Ref lambdalayer
        - !Sub "arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:2"

  lambdalayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: rsslayer
      Description: python3 dependencies for XRay, BeautifulSoup4, feedparser and requests
      ContentUri: lambda-layer/
      CompatibleRuntimes:
        - python3.8
      LicenseInfo: 'MIT-0'
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: python3.8

  rssfeed:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
      - AttributeName: blogsource
        AttributeType: S
      - AttributeName: timest
        AttributeType: S
      - AttributeName: visible
        AttributeType: S
      KeySchema:
      - AttributeName: blogsource
        KeyType: HASH
      - AttributeName: timest
        KeyType: RANGE  
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
      - IndexName: timest
        KeySchema:
        - AttributeName: visible
          KeyType: HASH
        - AttributeName: timest
          KeyType: RANGE
        Projection:
          ProjectionType: ALL

  PublicJsonBucket:
    Type: AWS::S3::Bucket
